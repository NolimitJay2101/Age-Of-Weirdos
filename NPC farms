-- Civilian Farm Toggle
local CivilianX, CivilianY, CivilianZ; -- Variables to store player position
local CivilianToggle = FarmTab:CreateToggle({
    Name = "Civilian Farm",
    CurrentValue = false,
    Flag = "CivilianToggle",
    Callback = function(Value)
        getgenv().Civilian = Value
        if Value then
            spawn(function()
                while getgenv().Civilian do
                    wait(0.2)
                    for _, v in pairs(game.Workspace:GetChildren()) do
                        if v:IsA("Model") and v.Name == "Civilian" and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                            game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                            local playerCFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = playerCFrame
                        end
                    end
                end
            end)

            -- Save current position
            local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
            CivilianX, CivilianY, CivilianZ = rootPart.Position.X, rootPart.Position.Y, rootPart.Position.Z
        else
            wait(0.2)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(CivilianX, CivilianY, CivilianZ)
        end
    end,
})

-- Police Farm Toggle
local PolicePosition -- Variable to store player position
local PoliceToggle = FarmTab:CreateToggle({
    Name = "Police Farm",
    CurrentValue = false,
    Flag = "PoliceFarmToggle",
    Callback = function(Value)
        getgenv().Police = Value
        if Value then
            spawn(function()
                while getgenv().Police do
                    wait(0.2)
                    for _, v in pairs(game.Workspace:GetChildren()) do
                        if v:IsA("Model") and v.Name == "Police" and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                            game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                            local playerCFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = playerCFrame
                        end
                    end
                end
            end)

            -- Save current position
            local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
            PolicePosition = rootPart.Position
        else
            wait(0.2)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(PolicePosition)
        end
    end,
})

-- Thug Farm Toggle
local ThugPosition -- Variable to store player position
local ThugToggle = FarmTab:CreateToggle({
    Name = "Thug Farm",
    CurrentValue = false,
    Flag = "ThugFarmToggle",
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

        if not humanoidRootPart then
            return
        end

        if Value then
            -- Toggle is turned ON
            getgenv().Thug = true

            spawn(function()
                while getgenv().Thug do
                    wait(0.2)
                    pcall(function()
                        for _, v in pairs(game.Workspace:GetChildren()) do
                            if v:IsA("Model") and v.Name == "Thug" and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                local playerCFrame = humanoidRootPart.CFrame
                                playerCFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                                humanoidRootPart.CFrame = playerCFrame
                            end
                        end
                    end)
                end
            end)

            -- Save current position
            ThugPosition = humanoidRootPart.Position
        else
            -- Toggle is turned OFF
            getgenv().Thug = false
            wait(0.2)
            humanoidRootPart.CFrame = CFrame.new(ThugPosition)
        end
    end,
})

-- Laser Civilian Farm Toggle
local LaserCivilianFarmToggle = FarmTab:CreateToggle({
    Name = "Laser Civilian Farm",
    CurrentValue = false,
    Flag = "LaserCivilianFarmToggle",
    Callback = function(state)
        if state then
            getgenv().LaserC = true;
            coroutine.resume(coroutine.create(function()
                local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
                local part = event:InvokeServer(true);
                getgenv().LaserC = true;
                while LaserC and part do
                    wait();
                    for i, v in pairs(game.Workspace:GetChildren()) do
                        if ((v.ClassName == "Model") and (v.Name == "Civilian") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
                            part.Position = v.HumanoidRootPart.Position;
                        end
                    end
                end
                event:InvokeServer(false);
            end));
        else
            spawn(function()
                getgenv().LaserC = false;
            end);
            breakvelocity();
        end
    end,
})

-- Laser Police Farm Toggle
local LaserPoliceFarmToggle = FarmTab:CreateToggle({
    Name = "Laser Police Farm",
    CurrentValue = false,
    Flag = "LaserPoliceFarmToggle",
    Callback = function(state)
        if state then
            getgenv().LaserV = true;
            coroutine.resume(coroutine.create(function()
                local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
                local part = event:InvokeServer(true);
                getgenv().LaserV = true;
                while LaserV and part do
                    for i, v in pairs(game.Workspace:GetChildren()) do
                        if ((v.ClassName == "Model") and (v.Name == "Police") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
                            part.Position = v.HumanoidRootPart.Position;
                        end
                    end
                    wait();
                end
                event:InvokeServer(false);
            end));
        else
            spawn(function()
                getgenv().LaserV = false;
            end);
            breakvelocity();
        end
    end,
})

-- Laser Thug Farm Toggle
local LaserThugFarmToggle = FarmTab:CreateToggle({
    Name = "Laser Thug Farm",
    CurrentValue = false,
    Flag = "LaserThugFarmToggle",
    Callback = function(state)
        if state then
            getgenv().LaserH = true;
            coroutine.resume(coroutine.create(function()
                local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
                local part = event:InvokeServer(true);
                getgenv().LaserH = true;
                while LaserH and part do
                    wait();
                    for i, v in pairs(game.Workspace:GetChildren()) do
                        if ((v.ClassName == "Model") and (v.Name == "Thug") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
                            part.Position = v.HumanoidRootPart.Position;
                        end
                    end
                end
                event:InvokeServer(false);
            end));
        else
            spawn(function()
                getgenv().LaserH = false;
            end);
            breakvelocity();
        end
    end,
})

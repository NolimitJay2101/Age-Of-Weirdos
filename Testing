--[[
██╗  ██╗███████╗██╗     ██╗ ██████╗ ███████╗ ██████╗ 
██║  ██║██╔════╝██║     ██║██╔═══██╗██╔════╝██╔═══██╗
███████║█████╗  ██║     ██║██║   ██║███████╗██║   ██║
██╔══██║██╔══╝  ██║     ██║██║   ██║╚════██║██║   ██║
██║  ██║███████╗███████╗██║╚██████╔╝███████║╚██████╔╝
╚═╝  ╚═╝╚══════╝╚══════╝╚═╝ ╚═════╝ ╚══════╝ ╚═════╝ 
                                                     
Made By Sage#8437                                                  
Open Source 😘😘😘😘😘😘      

ToDo List {
better esp with health bar or something
add pcalls and shit
disable everyones colision for antifling :shrug:
perhaps a teleport player to fuck the bring mode 
make farms actually afkable
}                                                   
]]--

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))();
local Window = Library.CreateLib("Helioso - Age Of Heros", "Serpent");
local Tab = Window:NewTab("AutoFarm Menu");
local MainSection = Tab:NewSection("AutoFarm Menu");
local TargetTab = Window:NewTab("Player Menu");
local TargetSection = TargetTab:NewSection("Player Menu");
local STab = Window:NewTab("Self Menu");
local SSection = STab:NewSection("Self Menu");
local StatTab = Window:NewTab("AutoStat Menu");
local StatSection = StatTab:NewSection("AutoStat Menu");
local TTab = Window:NewTab("Teleport Menu");
local TSection = TTab:NewSection("Teleport Menu");
local KTab = Window:NewTab("Keybind Menu");
local KSection = KTab:NewSection("Keybind Menu");
local MTab = Window:NewTab("Misc Menu");
local MSection = MTab:NewSection("Misc Menu");
_G.CToggle = false;
_G.metalskin = false;
_G.LOCALPLAYER = game.Players.LocalPlayer.Name;
_G.bring = false;
player = game.Players.LocalPlayer;
breakvelocity = function()
	spawn(function()
		local BeenASecond, V3 = false, Vector3.new(0, 0, 0);
		delay(1, function()
			BeenASecond = true;
		end);
		while not BeenASecond do
			for _, v in ipairs(player.Character:GetDescendants()) do
				if v.IsA(v, "BasePart") then
					v.Velocity, v.RotVelocity = V3, V3;
				end
			end
			wait();
		end
	end);
end;
plrlist = {};
plrnum = 0;
getNearPlayer = function(maxDistance)
	pcall(function()
		if (player and player.Character) then
			local playerLocation = player.Character.HumanoidRootPart.Position;
			for i, v in pairs(game.Players:GetChildren()) do
				if (v.Character and (v.Character.Health ~= 0)) then
					local location = v.Character.HumanoidRootPart.Position;
					if (((location - playerLocation).Magnitude <= maxDistance) and (v.Character.Health ~= 0)) then
						pcall(function()
							if (v == player) then
							else
								local teleexist = game:GetService("Workspace")[v.Name].HumanoidRootPart;
								if (not teleexist:FindFirstChild("telekinesisPosition") and (v.Character.Health ~= 0)) then
								elseif (v ~= player) then
									plrnum += 1
									table.insert(plrlist, v.Character);
								end
							end
						end);
					end
				end
			end
		end
	end);
end;
GetList = function()
	x = 1;
	Plyr = game.Players:GetPlayers();
	dropdown = {};
	for value in pairs(Plyr) do
		PLR = Plyr[x].Name;
		x += 1
		table.insert(dropdown, PLR);
	end
end;
	if state then
		getgenv().superrapid = true;
		local UserInputService = game:GetService("UserInputService");
		local function onInputEnded(inputObject, gameProcessedEvent)
			if gameProcessedEvent then
				return;
			end
			if (superrapid == true) then
				if (inputObject.UserInputType == Enum.UserInputType.MouseButton1) then
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
				end
			end
		end
		UserInputService.InputEnded:Connect(onInputEnded);
	else
		spawn(function()
			getgenv().superrapid = false;
		end);
	end
getRoot = function(char)
	local rootPart = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso") or char:FindFirstChild("UpperTorso");
	return rootPart;
end;
Players = game:GetService("Players");
SSection:NewButton("Name Esp", "", function()
	local esp_settings = {textsize=20};
	local gui = Instance.new("BillboardGui");
	local esp = Instance.new("TextLabel", gui);
	gui.Name = "esp";
	gui.ResetOnSpawn = false;
	gui.AlwaysOnTop = true;
	gui.LightInfluence = 0;
	gui.Size = UDim2.new(1.75, 0, 1.75, 0);
	esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	esp.Text = "";
	esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
	esp.BorderSizePixel = 4;
	esp.BorderColor3 = Color3.new(255, 255, 255);
	esp.BorderSizePixel = 0;
	esp.Font = "SourceSansSemibold";
	esp.TextSize = esp_settings.textsize;
	esp.TextColor3 = Color3.fromRGB(255, 255, 255);
	getgenv().esp = true;
	game:GetService("RunService").RenderStepped:Connect(function()
		for i, v in pairs(game:GetService("Players"):GetPlayers()) do
			if ((v ~= game:GetService("Players").LocalPlayer) and Players.LocalPlayer.Character and (v.Character.Head:FindFirstChild("esp") == nil)) then
				esp.Text = "Name: " .. v.Name .. "";
				gui:Clone().Parent = v.Character.Head;
			end
		end
	end);
end);
SSection:NewToggle("Immortality", "", function(state)
	if state then
		local varX = player.Character.UpperTorso.Position['X'];
		local varY = player.Character.UpperTorso.Position['Y'];
		local varZ = player.Character.UpperTorso.Position['Z'];
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-320, 86, 271);
		wait(0.2);
		player.Character.UpperTorso.Waist:Destroy();
		player.Character.Head.Anchored = true;
		wait(2);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	else
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		player.Character:BreakJoints();
		wait(6.5);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	end
end);
SSection:NewToggle("Invisibility", "", function(state)
	if state then
		local varX = player.Character.UpperTorso.Position['X'];
		local varY = player.Character.UpperTorso.Position['Y'];
		local varZ = player.Character.UpperTorso.Position['Z'];
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2711, 229, -1769);
		wait(0.2);
		game:GetService("Workspace")[_G.LOCALPLAYER].LowerTorso.Root:Destroy();
		wait(2);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	else
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		player.Character:BreakJoints();
		wait(6.5);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	end
end);
SSection:NewToggle("Hide Title Gui", "", function(state)
	if state then
		getgenv().hide = true;
		while hide do
			wait();
			if game.Players.LocalPlayer.Character then
				local rP = game.Players.LocalPlayer.Character.HumanoidRootPart;
				if (rP and rP:FindFirstChild("titleGui")) then
					rP.titleGui:Destroy();
				end
			end
		end
	else
		spawn(function()
			getgenv().hide = false;
		end);
	end
end);
SSection:NewToggle("Antitelekinesis", "", function(state)
	if state then
		getgenv().localtele = true;
		spawn(function()
			while localtele do
				game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[_G.LOCALPLAYER].Character);
				wait();
			end
		end);
	else
		spawn(function()
			getgenv().localtele = false;
		end);
	end
end);
TargetSection:NewButton("Remove Gyro", "", function()
	game:GetService("Workspace")[_G.tplayer].HumanoidRootPart.telekinesisGyro:Destroy();
	game:GetService("Workspace")[_G.tplayer].HumanoidRootPart.telekinesisPosition:Destroy();
	game:GetService("Workspace")[_G.tplayer].Humanoid.PlatformStand = false;
	game:GetService("Workspace")[_G.tplayer].Humanoid.WalkSpeed = 150;
	game:GetService("Workspace")[_G.tplayer].Humanoid.JumpPower = 150;
end);
TargetSection:NewToggle("Disable Telekinesis", "", function(state)
	spawn(function()
		if state then
			Players = game:GetService("Players");
			for i, player in pairs(Players:GetPlayers()) do
				getgenv().LToggle = true;
				spawn(function()
					while LToggle do
						wait();
						game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[player.Name].Character);
					end
				end);
			end
		else
			spawn(function()
				getgenv().LToggle = false;
			end);
		end
	end);
end);
KSection:NewKeybind("MetalSkin", "", Enum.KeyCode['R'], function()
	if (_G.metalskin == false) then
		game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", true);
		_G.metalskin = true;
	else
		game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", false);
		_G.metalskin = false;
	end
end);
KSection:NewKeybind("Carry Player", "", Enum.KeyCode['H'], function()
	if (_G.CToggle == false) then
		spawn(function()
			getNearPlayer(99);
			wait();
			_G.CToggle = true;
			getgenv().CarryP = true;
			while CarryP do
				wait();
				spawn(function()
					for i, v in pairs(plrlist) do
						if (v == player) then
						else
							Xt = player.Character.HumanoidRootPart.Position['X'];
							Yt = player.Character.HumanoidRootPart.Position['Y'];
							Zt = player.Character.HumanoidRootPart.Position['Z'];
							game:GetService("Workspace")[v.Name].HumanoidRootPart.telekinesisPosition.Position = Vector3.new(Xt, Yt + 8, Zt + 5);
						end
					end
				end);
			end
		end);
	else
		spawn(function()
			_G.CToggle = false;
			plrlist = {};
			getgenv().CarryP = false;
		end);
	end
end);
KSection:NewKeybind("Telekinesis Lock", "", Enum.KeyCode['T'], function()
	spawn(function()
		local LookVector = game.Workspace.Camera.CFrame.LookVector;
		game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, true);
		game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, false);
	end);
end);
KSection:NewKeybind("Telekinesis kill", "", Enum.KeyCode['G'], function()
	spawn(function()
		getNearPlayer(99);
		for i, v in pairs(plrlist) do
			if (v == player) then
			else
				spawn(function()
					v.Head.Neck:Destroy();
					plrlist = {};
					wait(0.2);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[v.Name].Character);
					end);
				end);
			end
		end
	end);
end);
KSection:NewKeybind("Release Telekinesis", "", Enum.KeyCode['C'], function()
	plrlist = {};
	Players = game:GetService("Players");
	for i, player in pairs(Players:GetPlayers()) do
		spawn(function()
			game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[player.Name].Character);
		end);
	end
end);
KSection:NewKeybind("Toggle UI", "", Enum.KeyCode.RightShift, function()
	Library:ToggleUI();
end);
